@gl void glGenBuffers(GLsizei n, GLuint * buffers);
@gl void glBindBuffer(	GLenum target, 	GLuint buffer); 
@gl void glBufferData(	GLenum target, 	GLsizeiptr size, 	const void * data, 	GLenum usage);
@gl GLuint glCreateShader(	GLenum shaderType);
@gl void glShaderSource(	GLuint shader, 	GLsizei count, 	const GLchar **string, 	const GLint *length);
@gl void glCompileShader(	GLuint shader);
@gl @debug void glGetShaderiv(	GLuint shader, 	GLenum pname, 	GLint *params);
@gl @debug void glGetShaderInfoLog(	GLuint shader,	GLsizei maxLength, 	GLsizei *length, 	GLchar *infoLog);
@gl GLuint glCreateProgram(	void);
@gl void glAttachShader(	GLuint program, GLuint shader);
@gl void glLinkProgram(	GLuint program);
@gl @debug void glGetProgramiv(	GLuint program, GLenum pname, 	GLint *params);
@gl @debug void glGetProgramInfoLog(	GLuint program, 	GLsizei maxLength, 	GLsizei *length, 	GLchar *infoLog);
@gl void glUseProgram(	GLuint program);
@gl void glDeleteShader(	GLuint shader);

@gl void glVertexAttribPointer(	GLuint index, 	GLint size, 	GLenum type, 	GLboolean normalized, 	GLsizei stride, 	const void * pointer);

@gl void glEnableVertexAttribArray(	GLuint index);

@gl void glGenVertexArrays(	GLsizei n, 	GLuint *arrays);

@gl void glBindVertexArray(	GLuint array);

@gl @debug void glDebugMessageInsert(	GLenum source, 	GLenum type, 	GLuint id, 	GLenum severity, 	GLsizei length, 	const char *message);

@gl @debug void glDebugMessageCallback(	DEBUGPROC callback, 	const void * userParam);
@gl @debug void glDebugMessageControl(	GLenum source, 	GLenum type, 	GLenum severity, 	GLsizei count, 	const GLuint *ids, 	GLboolean enabled);

@gl @debug void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const char *label);
@gl @debug void glObjectPtrLabel(void *ptr, GLsizei length, const char *label);

@gl @debug void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, char *label);
 
@gl GLuint glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName);

@gl void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

@gl void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
 
@gl void glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);

@gl void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value); 

@gl GLint glGetUniformLocation(GLuint program, const GLchar *name);

@gl void glActiveTexture(GLenum texture);

@gl void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

@gl GLuint64 glGetTextureHandleARB(GLuint texture);

@gl void glMakeTextureHandleResidentARB(GLuint64 handle);

@gl void glVertexAttribLPointer(	GLuint index, 	GLint size, 	GLenum type, 	GLsizei stride, 	const void * pointer);

@gl void glUniformHandleui64ARB(GLint location, GLuint64 value);

@gl void glUniform2ui(GLint location, GLuint v0, GLint v1);

@gl void glCreateTextures(GLenum target, GLsizei n, GLuint *textures);

@gl void glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

@gl void glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

@gl void glTextureParameteri(GLuint texture, GLenum pname, GLint param);

@gl void glCreateBuffers(GLsizei n, GLuint *buffers);

@gl  void glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);

@gl void glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);

@gl void glBindBufferBase(	GLenum target, 	GLuint index, 	GLuint buffer);
 
@gl void glDrawElementsInstancedBaseVertexBaseInstance(	GLenum mode, 	GLsizei count, 	GLenum type, 	void *indices, 	GLsizei instancecount, 	GLint basevertex, 	GLuint baseinstance);

@gl void glUniform1ui(GLint location, GLuint v0);

@gl void glUniform4f(	GLint location, 	GLfloat v0, 	GLfloat v1, 	GLfloat v2, 	GLfloat v3);
 
@gl void glDrawArraysInstanced(	GLenum mode, 	GLint first, 	GLsizei count, 	GLsizei instancecount);